### Variables

# Set logo key as main modifier
set $mod Mod1

# Colors
set $foreground #c0caf5
set $highlight #bb9af7
set $wallpaper ~/.wallpapers/catland.png
# set $lock_cmd swaylock --daemonize --image $wallpaper
set $lock_cmd  swaylock --daemonize --screenshots --clock --indicator  --indicator-radius 100  --indicator-thickness 7  --effect-blur 7x5  --effect-vignette 0.5:0.5  --ring-color cba6f7 --key-hl-color f9e2af --line-color 00000000  --inside-color 00000088  --separator-color 00000000  --grace 1  --fade-in 0.2
set $sleep_cmd systemctl suspend
set $launcher_cmd wofi --show drun --no-actions --insensitive --prompt 'Run' | xargs swaymsg exec --

# Set color for focused window
client.focused $highlight $highlight $foreground

### Output configuration
output X11-1 resolution 1920x1080 position 1920,0

# Set wallpaper
output * bg $wallpaper fill

### Idle configuration

# Lock the screen after 300 seconds of inactivity, then turn off
# all displays after another 300 seconds, and turn the screens back on when
# resumed. It will also lock the screen before the computer goes to sleep.
exec swayidle -w \
    timeout 900 '$lock_cmd' \
    timeout 1200 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    timeout 1800 '$sleep_cmd' \
    before-sleep 'playerctl pause' \
    before-sleep '$lock_cmd' \
    lock '$lock_cmd'

# Inhibit idle if a window is in fullscreen
for_window [shell=".*"] inhibit_idle fullscreen

# Prevent Brave from inhibiting shortcuts

### Input configuration

# Mouse
# Hide mouse cursor when not used
seat * hide_cursor 8000

# Touchpad
input type:touchpad {
    accel_profile adaptive
    click_method button_areas
    dwt disabled
    natural_scroll enabled
    scroll_method two_finger
    tap enabled
    natural_scroll enabled
}

# Keyboard
# input "type:keyboard" {
#     # Map caps lock to escape and use right alt as compose key to create umlauts
#     # To actually create them, type the following keys in a sequence:
#     # ralt + " + u --> Ã¼
#     xkb_options "caps:swapescape,compose:ralt,altwin:swap_lalt_lwin"
#     repeat_delay 300
#     repeat_rate 40
# }

input "type:keyboard" {
    xkb_layout us
    xkb_variant ,nodeadkeys 
}
### Key bindings

# App launcher
bindsym $mod+d exec $launcher_cmd

# Launch terminal
bindsym $mod+Return exec alacritty

# Launch browser
bindsym $mod+w exec firefox

# Take screenshots
bindsym Print exec grim "screenshot-$(date +'%F-%H-%M-%S').png"
bindsym Print+$mod exec grim -g "$(slurp)" "screenshot-$(date +'%F-%H-%M-%S').png"

# Lock screen
bindsym $mod+ctrl+q exec loginctl lock-session

# Media control
bindsym --locked XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindsym --locked XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindsym --locked XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindsym --locked XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindsym --locked XF86MonBrightnessDown exec light -T 0.72 
bindsym --locked XF86MonBrightnessUp exec light -T 1.4
bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous
bindsym XF86Search exec $launcher_cmd

bindsym $mod+Shift+x exec $lock_cmd

# Kill focused window
bindsym $mod+Shift+q kill
# Reload the configuration file
bindsym $mod+Shift+c reload

# Move focus around
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
bindsym $mod+tab workspace back_and_forth

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Splitting direction
bindsym $mod+b split toggle

# Make current focus fullscreen
bindsym $mod+f fullscreen

# Resizing containers
bindsym $mod+r mode 'resize'
mode 'resize' {
    # Resizing keys
    bindsym h resize shrink width 10px
    bindsym j resize grow height 10px
    bindsym k resize shrink height 10px
    bindsym l resize grow width 10px

    # Return to default mode
    bindsym Escape mode 'default'
}
#
# Screen capture
#
set $screenshot 1 selected, 2 whole, 3 selected clipboard, 4 whole clipboard, 5 swappy
mode "$screenshot" {
    bindsym 1 exec 'grim -g "$(slurp)" ~/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
    bindsym 2 exec 'grim ~/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
    bindsym 3 exec 'grim -g "$(slurp)" - | wl-copy', mode "default"
    bindsym 4 exec 'grim - | wl-copy', mode "default"
    bindsym 5 exec 'grim -g "$(slurp)" - | swappy -f -', mode "default"

# back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+Print mode "default"
}

bindsym $mod+Shift+s mode "$screenshot"
#
# Status Bar
#
bar {
    swaybar_command waybar
}

# bar {
#     position top
# 
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
# 
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

# Hide window title bars and borders
default_border pixel
hide_edge_borders smart

# Start notification daemon
exec mako

# Start display management daemon
exec kanshi

# Adjust color temperature to reduce eye strain
exec gammastep

# Enable autotiling
exec autotiling-rs

# Waybar Icons
exec_always --no-startup-id workstyle &> /tmp/workstyle.log

# Clipboard manager
exec wl-paste --type text --watch clipman store
bindsym $mod+v exec clipman pick --tool wofi

include /etc/sway/config.d/*
